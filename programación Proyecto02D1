const byte buttonPin1 = 0;
const byte buttonPin2 = 7;
 
volatile bool D8_state = LOW;
volatile bool D7_state = LOW;

void setup () {

  DDRB &= ~(1 << DDB0);
  PORTB |= (1 << DDB0);

  DDRD &= ~(1 << DDD7);
  PORTD |= (1 << DDD7);
 
  PCICR |= B00000100;

  PCMSK2 |= B10000000;
  
  PCICR |= B00000001;

  PCMSK0 |= B00000001;
}

void loop () {
//Resto del cÃ³digo
}

ISR(PCINT0_vect)
{
  // Port D Interrupt occurred
  
  // Check if this was B0
  if (bit_is_clear(PINB, buttonPin1)) {
    // Pin D2 triggered the ISR on a Falling pulse
    D8_state = !D8_state;
    // Set LED 1 to state of D2_state boolean
    if (D8_state) {
      servoA.write(180);
      servoB.write(120);
      servoC.write(60);
      servoD.write(150);
      servoE.write(90);
    } else {
      servoA.write(0);
      servoB.write(0);
      servoC.write(0);
      servoD.write(0);
      servoE.write(0); // Set the corresponding pin to LOW
    }
  }
}

ISR(PCINT2_vect)
{
  if (bit_is_clear(PIND, buttonPin2)) {
    // Pin D2 triggered the ISR on a Falling pulse
    D7_state = !D7_state;
    // Set LED 1 to state of D2_state boolean
    if (D7_state) {
      servoA.write(150);
      servoB.write(60);
      servoC.write(120);
      servoD.write(130);
      servoE.write(150);
    } else {
      servoA.write(0);
      servoB.write(0);
      servoC.write(0);
      servoD.write(0);
      servoE.write(0); // Set the corresponding pin to LOW
    }
  }
  }
